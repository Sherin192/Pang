/*
	if (player1 != NULL)										//If cast went fine procede
	{
		//Check if the bounding box of our paddle intersecates with the bounding box of the ball
	
		if (player1->getBoundingRect().intersects(getBoundingRect()))
		{
			
			//if it does we change the angle 
			
			//left 
			if (getPosition().y + 10 >= player1->getBoundingRect().top
				&& getPosition().y - 10 <= player1->getBoundingRect().top + player1->getBoundingRect().height
				&& getBoundingRect().left < player1->getBoundingRect().left)
			{
				angle = 360.0f - (angle - 180.0f);

				if (angle < 0.0f) angle += 360.0f;
				if (angle > 360.0f) angle -= 360.0f;

				if (angle > 350.0f && angle < 360.0f) angle -= 10.0f + float(rand() % 10 + 1);
				if (angle > 0.0f && angle < 10.0f) angle += 10.0f + float(rand() % 10 + 1);
				
				//if the player is moving we modify the angle accordingly to his direction 
				if (player1->getVelocity() < 0)
					angle += 10.0f + float(rand() % 10 + 1);
				else 
					angle -= 10.0f + float(rand() % 10 + 1);

				//sets the position of the ball 1 pixel away from the paddle    16 is the radius of our ball + 1 pixel
				setPosition(player1->getBoundingRect().left - 16, getPosition().y);

				moveX = -moveX;
				
			}	//top
			else if (getPosition().x > player1->getBoundingRect().left
				&& getBoundingRect().left < player1->getBoundingRect().left + player1->getBoundingRect().width
				&& getBoundingRect().top  < player1->getBoundingRect().top)
			{
				angle = 360.0f - angle;

				if (angle < 0.0f) angle += 360.0f;
				if (angle > 360.0f) angle -= 360.0f;

				if (angle > 350.0f && angle < 360.0f) angle -= 20.0f;
				if (angle > 0.0f && angle < 10.0f) angle += 20.0f;

				setPosition(getPosition().x, player1->getBoundingRect().top - 16);

				moveY = -moveY;
			}				//BOTTOM
			else if (getPosition().x > player1->getBoundingRect().left
				&& getBoundingRect().left < player1->getBoundingRect().left + player1->getBoundingRect().width
				&& getBoundingRect().top + getBoundingRect().height > player1->getBoundingRect().top + player1->getBoundingRect().height)
			{
				angle = 360.0f - angle;

				if (angle < 0.0f) angle += 360.0f;
				if (angle > 360.0f) angle -= 360.0f;

				if (angle > 350.0f && angle < 360.0f) angle -= 10.0f + float(rand() % 10 + 1);
				if (angle > 0.0f && angle < 10.0f) angle += 10.0f + float(rand() % 10 + 1);
				
				setPosition(getPosition().x, player1->getBoundingRect().top + player1->getBoundingRect().height + 16);
				
				moveY = -moveY;
			}
		}
	}
	
	PaddleAI* playerAI = dynamic_cast<PaddleAI*>(Game::getGameObjectManager().get("PaddleAI"));

	if(playerAI != NULL)
	{ 
		if (playerAI->getBoundingRect().intersects(getBoundingRect()))
		{
			if (getPosition().y >= playerAI->getBoundingRect().top
				&& getPosition().y <= playerAI->getBoundingRect().top + playerAI->getBoundingRect().height
				&& getBoundingRect().left + getBoundingRect().width > playerAI->getBoundingRect().left + playerAI->getBoundingRect().width)
			{
				angle = 360.0f - (angle - 180.0f);

				if (angle < 0.0f) angle += 360.0f;
				if (angle > 360.0f) angle -= 360.0f;

				if (angle > 350.0f && angle < 360.0f) angle -= 20.0f;
				if (angle > 0.0f && angle < 10.0f) angle += 20.0f;

				if (playerAI->getVelocity() < 0)
					angle += 10.0f + float(rand() % 10 + 1);
				else 
					angle -= 10.0f + float(rand() % 10 + 1);

				//sets the position of the ball 1 pixel away from the paddle    16 is the radius of our ball + 1 pixel
				setPosition(playerAI->getBoundingRect().left + getBoundingRect().width + 16, getPosition().y);

				moveX = -moveX;
			}
		}
	}*/